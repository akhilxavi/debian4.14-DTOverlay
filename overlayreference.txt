
Instructions for Dynamically Loading Device Tree Overlays into Linux Kernel
----------------------------------------------------------------------------

This document provides instructions for dynamically loading the device tree overlays (dtbo) into linux kernel running on inforce 820 based platforms.


Table of Contents:
-----------------
    1) Device Tree Compiler
        1.1) Installing the Compiler
    2) Enable Overlay Support in Kernel
        2.1) Apply patches and build the kernel
    3) Load Overlays Dynamically
        3.1) Compiling the Overlays
        3.2) Loading Overlays via Configfs

# 1) Device Tree Compiler
-------------------------

First of all we need to install device tree compiler (dtc) for compiling the source files (dts) into overlays (dtbo). Overlay support was added to the mainline dtc by v1.4.2 only. But, the one which is available as a package in debian based distros is v1.4.0. So, we need to install the compiler from source.

## 1.1 Installing the Compiler
------------------------------

	$ sudo apt-get install flex bison swig
	$ git clone git://git.kernel.org/pub/scm/utils/dtc/dtc.git
	$ cd dtc
	$ make -j4
	$ sudo make install PREFIX=/usr

2) Enable Overlay Support in Kernel
-----------------------------------

Next, overlay support needs to be enabled in the kernel. Apply the patches present in the patches folder over 'Inforce-6601-Debian-Linux-BSP-V1.0' release and build the kernel.

	$ make defconfig distro.config
	$ make -j4 Image dtbs KERNELRELEASE=4.14.0-qcomlt-arm64

Pack the 'dt' and 'bootimage' and flash it.

3) Load Overlays Dynamically
----------------------------
After flashing the patched kernel onto the board, following instructions allows to load device tree overlays dynamically through configfs.

3.1 Compiling the Overlays
--------------------------

There are some example overlays available for reference. Go into 'overlay' folder inside the package and build dtbo.

	$ cd dtOverlays
	$ make -j4

After successful compilation, device tree blobs (dtbo) will be available in 'bin' directory.

3.2 Loading Overlays via Configfs
---------------------------------

Now its the time to insert the device tree blobs into running kernel using configfs.

	$ sudo su
	# mount -t configfs none /sys/kernel/config

When configfs has been mounted properly, that directory should have been populated with subdirectories '/sys/kernel/config/device-tree/overlays'
	
	# cd /sys/kernel/config/device-tree/overlays/
	# mkdir -p ov5640

Copy the 'dtbo' files to '/home/linaro' folder of the device.

	# cat ov5640.dtbo > /sys/kernel/config/device-tree/overlays/ov5640/dtbo (example for enabling OV5640 sensor)


After loading, the device should appear under '/proc/device-tree/soc/cci@a0c000/camera_rear@3b'

Thatâ€™t it! You have loaded device tree overlay dynamically.

Validate by running respective sensors scripts.




NOTE:

-Hardware encoding and decoding will not work.
-This document should be read along with 'Inforce-6601-Debian-Linux-BSP-V1.0' release notes.

